import cv2
import numpy as np

# Load the image
image = cv2.imread("C:/Users/minik/Desktop/VSCode/55.jpg")

#define the template
template = cv2.imread("C:/Users/minik/Desktop/VSCode/ThreshCrown.png", cv2.IMREAD_COLOR)

# Convert the image to the grayscale color space
grayTemp = cv2.cvtColor(template, cv2.COLOR_BGR2GRAY)

# Convert the image to the HSV color space
hsv_image = cv2.cvtColor(image, cv2.COLOR_BGR2HSV)

# Define the lower and upper bounds for the yellow color range in HSV
lower_yellow = np.array([20, 100, 100])  # Adjust these values as needed
upper_yellow = np.array([30, 255, 255])  # Adjust these values as needed

#define the lower and upper bounds for the white color range in HSV

sensitivity = 120
lower_white = np.array([0, 0, 255-sensitivity])
upper_white = np.array([255, sensitivity, 255])

# Create a binary mask for the yellow color range
yellow_mask = cv2.inRange(hsv_image, lower_yellow, upper_yellow)

# Apply the mask to the original image to get the binary result
yellow_binary_image = cv2.bitwise_and(image, image, mask=yellow_mask)

# Create a binary mask for the white color range
white_mask = cv2.inRange(hsv_image, lower_white, upper_white)

# Apply the mask to the original image to get the binary result
white_binary_image = cv2.bitwise_and(image, image, mask=white_mask)

white_gray = cv2.cvtColor(white_binary_image, cv2.COLOR_BGR2GRAY)

res = cv2.matchTemplate(white_gray, grayTemp, cv2.TM_CCOEFF_NORMED)


# Show the binary image
cv2.imshow("Yellow Binary Image", yellow_binary_image)
cv2.imshow("White Binary Image", white_binary_image)
cv2.imshow("White Gray Image", white_gray)
cv2.imshow("res", res)
cv2.waitKey(0)
cv2.destroyAllWindows()